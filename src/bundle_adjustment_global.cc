#include <iostream>
#include <string>
#include <vector>

#include "bundle_adjustment.hpp"
#include "ceres/ceres.h"
#include "const_iter.h"
#include "google_suite.h"
#include "opencv2/opencv.hpp"

// Problem exposition:
// 1) Bundle adjustment overview:
//@ref https://en.wikipedia.org/wiki/Bundle_adjustment#Uses
// 2) Mathematical definition:
//@ref https://en.wikipedia.org/wiki/Bundle_adjustment#Mathematical_definition
// 3) Given settings: 5 pictures generated by certain program, each with the
// same fixed camera intrinsic parameters: focal length = 1000, coords. of the
// principal point (px = 320, py = 240, uint pixel), no skew factor and
// geometric distortion.
// 4) Underlying assumptions:
//   - All points are visible from all viewpoints (camera pose)

// Problem solving
// 1) Load the 2D points from the data
// 2) Initialize 3D points and cameras (fixed intrinsics + varying extrinsics)
// 3) Bundle adjustment: optimize positions of 3D points and configurations of
// cameras, using ceres-sovler.
// 4) Output the estimated optimal positions of 3D points and configurations of
// cameras

DEFINE_string(input, "data/xyz/image_formation%d.xyz", "2D image points file");

int main(int argc, char** argv) { std::cerr << "Good!\n"; }